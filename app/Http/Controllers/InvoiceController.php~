<?phpnamespace App\Http\Controllers;use App\Helpers\ApiException;use App\Helpers\ResponseHandler;use App\Http\Requests\InvoiceRequest;use App\Http\Resources\InvoiceResource;use App\Models\Invoice;use App\Models\User;class InvoiceController extends Controller{    /**     * @throws \Throwable     */    public function index()    {       /** @var User $user */        $user = auth()->user();        if (!$user->can('viewAnyInvoice')) {            throw new ApiException('You do not have permission to view any invoice', [],403);        }        $invoices = Invoice::paginate(request('per_page', 10));        return ResponseHandler::success('All Invoices', InvoiceResource::collection($invoices));    }    public function store(InvoiceRequest $request)    {        /** @var User $user */        $user = auth()->user();        if (!$user->can('createInvoice')) {            throw new ApiException('You do not have permission to create any invoice', [],403);        }        $invoice = Invoice::create($request->validated());        return new InvoiceResource($invoice);    }    public function show(Invoice $invoice)    {        return new InvoiceResource($invoice);    }    public function update(InvoiceRequest $request, Invoice $invoice)    {        /** @var User $user */        $user = auth()->user();        if (!$user->can('updateInvoice')) {            throw new ApiException('You do not have permission to update any invoice', [],403);        }        $invoice->update($request->validated());               return ResponseHandler::success('Updated Successfully', new InvoiceResource($invoice));    }    public function destroy(Invoice $invoice)    {        /** @var User $user */        $user = auth()->user();        if (!$user->can('deleteInvoice')) {            throw new ApiException('You do not have permission to delete any invoice', [],403);        }        $invoice->delete();        return response()->noContent();    }}